#version 450

layout (local_size_x = 10, local_size_y = 10) in;

layout(set = 0, binding = 0) uniform sampler3D volumnSampler; // stores intensities

layout(set = 0, binding = 1, rgba8) uniform writeonly image2D raycastedImage;

// augment the uv with world space and the volumnSampler with world space coordinate (x,y,z)

void main()
{
	ivec2 imageDimension = imageSize(raycastedImage);
	vec2 uv = vec2(gl_GlobalInvocationID.xy) / imageDimension; // Local invocation x,y?

	vec4 red = vec4(1.0f, 0.0f, 0.0f, 1.0f); // R8G8B8A8
	imageStore(raycastedImage, ivec2(gl_GlobalInvocationID.xy), red);
}

// for each pixel assign a flat color then transfer it over to a swapchain image for testing
// then assign the color value each pixel in a descriptor storage buffer
